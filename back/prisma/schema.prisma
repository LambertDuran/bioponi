// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pool {
  id               Int      @id @default(autoincrement())
  number           Int      @unique
  volume           Float
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  action           Action[]
  actionSecondPool Action[] @relation("ActionSecondPool")
}

model Food {
  id            Int      @id @default(autoincrement())
  name          String   @unique
  froms         Int[]
  tos           Int[]
  ranges        String[]
  sizes         Float[]
  foodRates     Float[]
  prices        Int[]
  distributions Int[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  fish          Fish[]
}

model Fish {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  weeks     Int[]
  weights   Int[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  food      Food     @relation(fields: [foodId], references: [id], onDelete: Cascade)
  foodId    Int
  action    Action[]
}

model Action {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  type          String
  date          DateTime
  totalWeight   Float?
  averageWeight Float?
  fishNumber    Int
  lotName       String?
  pool          Pool     @relation(fields: [poolId], references: [id], onDelete: Cascade)
  poolId        Int
  fish          Fish?    @relation(fields: [fishId], references: [id], onDelete: Cascade)
  fishId        Int?
  secondPool    Pool?    @relation("ActionSecondPool", fields: [secondPoolId], references: [id], onDelete: Cascade)
  secondPoolId  Int?
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
